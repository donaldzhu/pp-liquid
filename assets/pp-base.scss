@use './scss/typography' as *;
@use './scss/layout' as *;

:root {
  --pp-font-heading-family: 'AzeretMono';
  --pp-font-body-family: 'XanhMono';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  @include breakpoint-value(--pp-font-heading-size, 4rem, 2.4rem, 1.4rem);
  @include breakpoint-value(--pp-font-body-size, 2.4rem, 1.65rem, 1.2rem);
  @include breakpoint-value(--pp-x-padding, #{$x-padding-desktop}, #{$x-padding-tablet}, #{$x-padding-mobile});
  @include breakpoint-value(--pp-y-padding, 4.5rem, 3rem, 1.5rem);

  ul li {
    &::marker {
      content: none;
    }
  }

  a,
  a:active,
  a:visited {
    color: rgb(var(--color-foreground));
  }

  #shop-hcaptcha-badge-container {
    display: none !important;
  }
}

button.pp-button {
  color: rgb(var(--color-foreground));
  text-transform: uppercase;
  letter-spacing: 0.01em;

  &,
  &-active {
    $button-height: 4.2rem;
    border-radius: calc($button-height / 2);
    height: $button-height;
    padding: 0;

    @include flex;
    border: 1px solid rgb(var(--color-foreground));
    cursor: pointer;

    span,
    a {
      border: none;
      text-transform: uppercase;
      display: block;
      min-height: auto;
      min-width: auto;
      text-decoration: none;

      &,
      &:active,
      &:visited {
        color: inherit;
      }

      &::before,
      &::after {
        content: none;
      }
    }

    &,
    span,
    a {
      background: none;
      @include pp-body-type;
    }

    @include breakpoint-value(--button-height, 4.2rem, 3.2rem, 2.5rem);
    @include breakpoint-value(--border-width, 1px, 1px, 0.5px);
    @include breakpoint-value(--x-padding, 3rem, 2.25rem, 1.5rem);
    @include breakpoint-value(--font-size, var(--pp-font-body-size), var(--pp-font-body-size), 1.2rem);

    border-radius: calc(var(--button-height) / 2);
    height: var(--button-height);
    border-width: var(--border-width);

    span,
    a {
      padding: calc((var(--button-height) - (var(--pp-font-body-size) * 1.12)) / 2) var(--x-padding);
      font-size: var(--font-size);
    }
  }

  &-active,
  &:hover {
    background-color: rgb(var(--color-foreground));
    color: rgb(var(--color-background));
    transition: background-color $button-transition, color $button-transition;
  }

  &[disabled] {
    opacity: 0.5;
    pointer-events: none;
  }
}

h2,
p {
  @include pp-body-type;
}

img.drop-shadow {
  @include breakpoint-value(--offset, 1px, 0.6, 0.4px);
  @include breakpoint-value(--blur, 15px, 10px, 4px);
  filter: drop-shadow(var(--offset) var(--offset) var(--blur) rgba(0, 0, 0, 0.25));
}

:root {
  @include breakpoint-value(--pp-rounded-corners, 20px, 15px, 10px);
}

img.rounded {
  border-radius: var(--pp-rounded-corners);
}